openapi: 3.0.3
info:
  title: myrecord APIs
  description: REST API for myrecord application
  version: 1.0.0
tags:
  - name: post
  - name: collection
paths:
  /posts:
    get:
      summary: get post list
      operationId: getPosts
      tags:
        - post
      parameters:
        - name: user
          in: query
          required: false
          schema:
            type: string
          example: xxxxx@gmail.com
        - name: collection_name
          in: query
          required: false
          schema:
            type: string
          example: movie
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"
    post:
      summary: post new post
      operationId: postPost
      tags:
        - post
      requestBody:
        description: post content
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/PostRequestBody"
      responses:
        "201":
          description: CREATED
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Post"
  /posts/{id}:
    get:
      summary: get post by id
      operationId: getPostById
      tags:
        - post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: xxxxxxxxxxxxxxxxxxxxx
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Post"
    put:
      summary: update post by id
      operationId: putPost
      tags:
        - post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: xxxxxxxxxxxxxxxxxxxxx
      requestBody:
        description: put content
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/PostRequestBody"
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Post"
    delete:
      summary: delete post by id
      operationId: deletePost
      tags:
        - post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: xxxxxxxxxxxxxxxxxxxxx
      responses:
        "204":
          description: NO CONTENT
  /collections:
    get:
      summary: get collection list
      operationId: getCollections
      tags:
        - collection
      parameters:
        - name: user
          in: query
          required: false
          schema:
            type: string
          example: xxxxx@gmail.com
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Collection"
    post:
      summary: post new collection
      operationId: postCollection
      tags:
        - collection
      requestBody:
        description: post content
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                name:
                  type: string
                user:
                  type: string
              required:
                - name
                - user
      responses:
        "201":
          description: CREATED
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Collection"
  /collections/{id}:
    delete:
      summary: delete collection by id
      operationId: deleteCollection
      tags:
        - collection
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: xxxxxxxxxxxxxxxxxxxxx
      responses:
        "204":
          description: NO CONTENT
components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: string
        anime_name:
          type: string
        rating:
          type: integer
          format: int32
        delete_flag:
          type: integer
          format: int32
        user:
          type: string
        collection_name:
          type: string
        created_at:
          type: string
          format: date
        updated_at:
          type: string
          format: date
        deleted_at:
          type: string
          format: date
          example: null
    PostRequestBody:
      type: object
      properties:
        anime_name:
          type: string
        rating:
          type: integer
          format: int32
        user:
          type: string
        collection_name:
          type: string
      required:
        - anime_name
        - rating
        - user
        - collection_name
    Collection:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        user:
          type: string
        created_at:
          type: string
          format: date
        updated_at:
          type: string
          format: date
        deleted_at:
          type: string
          format: date
          example: null
